#!/bin/bash

set -e -o pipefail

counter=0

function stage {
  ((counter++)) || true
  printf "\n\033[34;1mâž¡  $1  \033[90m[stage $counter] [running ${SECONDS}s]\033[0m\n\n"
}
stage "Install dependencies from npm"
npm install

stage "Running the unit tests"
npm test

npm run compile && find dist -name '*Test.js' | xargs ./node_modules/nyc/bin/nyc.js check-coverage --lines 80 --per-file --reporter=text --reporter=html ./node_modules/mocha/bin/mocha

stage "Pulling the latest lpg-management-ui docker image"
docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
docker pull cshr/lpg-management-ui || true

stage "Building the new lpg-management-ui docker image"
docker build --cache-from cshr/lpg-management-ui:latest --build-arg VERSION=${TRAVIS_COMMIT} -t cshr/lpg-management-ui:${TRAVIS_COMMIT} .

BRANCH_TAG=`echo ${TRAVIS_PULL_REQUEST_BRANCH:-${TRAVIS_BRANCH}} | sed 's/\//-/g'`

stage "Pushing the lpg-management-ui ${TRAVIS_COMMIT} docker image"
docker tag cshr/lpg-management-ui:${TRAVIS_COMMIT} cshr/lpg-management-ui:${BRANCH_TAG}
docker tag cshr/lpg-management-ui:${TRAVIS_COMMIT} cshr/lpg-management-ui:${BRANCH_TAG}-${TRAVIS_BUILD_NUMBER}
docker tag cshr/lpg-management-ui:${TRAVIS_COMMIT} cshr/lpg-management-ui:latest
docker push cshr/lpg-management-ui

echo "Total run time: ${SECONDS}s"
